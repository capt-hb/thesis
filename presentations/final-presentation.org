#+OPTIONS: ':nil *:t -:t ::t <:t H:2 \n:nil ^:t arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:nil e:t email:nil f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:nil title:t toc:nil todo:t |:t
#+TITLE: Secure Calling Convention with Uninitialized Capabilities
#+DATE: 04-12-19
#+AUTHOR: Sander Huyghebaert \linebreak Promotor: Prof. Dr. Dominique Devriese \linebreak Supervisor: Thomas Van Strydonck \linebreak Supervisor: Dr. Steven Keuchel
#+EMAIL: sander.huyghebaert@vub.be
#+DESCRIPTION: Final Thesis Presentation
#+LATEX_CLASS: beamer
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \usepackage{color}
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 26.3 (Org mode 9.1.9)
# No Navigation Symbols
#+BEAMER_HEADER: \setbeamertemplate{navigation symbols}{}
#+BEAMER_HEADER: \usetheme[coloredtitles]{vub}
#+BEAMER_HEADER: \AtBeginSection[]{\begin{frame}<beamer>\frametitle{Outline}\tableofcontents[currentsection]\end{frame}}
#+MACRO: subtitle #+BEAMER: \framesubtitle{$1}

* Introduction
** Pointers
   #+ATTR_LATEX: :width 0.5\textwidth
   [[../figures/pointer.png]]

   # Mention "undefined behavior" in C spec for pointers
   - No Bounds
   - No Permissions
     
** Calling Convention with Pointers
   #+CAPTION: Stack at some point of a program
   #+ATTR_LATEX: :width 0.65\textwidth
   [[../figures/pointer-secret-on-stack-1.png]]

** Calling Convention with Pointers
   #+CAPTION: Stack after calling a function 
   #+ATTR_LATEX: :width 0.65\textwidth
   [[../figures/pointer-secret-on-stack-init.png]]

** Calling Convention with Pointers
   #+CAPTION: Callee returns
   #+ATTR_LATEX: :width 0.65\textwidth
   [[../figures/pointer-secret-on-stack-1.png]]

** Calling Convention with Pointers
   #+CAPTION: Caller invokes untrusted function
   #+ATTR_LATEX: :width 0.65\textwidth
   [[../figures/pointer-secret-on-stack-sp-secret.png]]

** Capability Machines
   #+CAPTION: Capability for a region of memory
   #+ATTR_LATEX: :width 0.7\textwidth
   [[../figures/capability.png]]
   
   - Bounds
   - Permissions
   
** CHERI
   - Capability extension to Instruction Set Architectures
   - Hardware implementation
     + Capability instructions
   - Backwards compatibility
   - Software stack
     + CLang/LLVM, CHERIBSD, QEMU Emulator
   
# Explain concepts used throughout thesis (for CCs)
** Well-Bracketed Control Flow
   #+ATTR_LATEX: :width 0.7\textwidth
   [[../figures/wbcf-1.png]]

** Well-Bracketed Control Flow
   #+ATTR_LATEX: :width 0.7\textwidth
   [[../figures/wbcf-2.png]]

** Well-Bracketed Control Flow
   #+ATTR_LATEX: :width 0.7\textwidth
   [[../figures/wbcf-3.png]]
** Well-Bracketed Control Flow
   #+ATTR_LATEX: :width 0.7\textwidth
   [[../figures/wbcf-4.png]]
** Well-Bracketed Control Flow
   #+ATTR_LATEX: :width 0.7\textwidth
   [[../figures/wbcf-5.png]]
   
** Local State Encapsulation
   
* Calling Convention
** CHERI-MIPS Calling Convention
   
** Calling Convention with Local Capabilities
   # Cite Lau's paper
   # WBCF & LSE
   # Open problem => stack clearing
   # First attempt => linear caps (small description, hardware limitation)
   
* Uninitialized Capabilities
** Uninitialized Capabilities
   {{{subtitle(Concept)}}}
   # Reflects stack growth
   # Small example of writes (i.e. cursor movement, permission regions update)
   
** Uninitialized Capabilities
   {{{subtitle(Implementation Overview)}}}
   
* Secure Calling Convention
** Calling Convention with Uninitialized Capabilities
  # Based on cc with local caps
  # Example (reuse, but better align, figures of previous presentation)
  # WBCF & LSE
  
* Assembler
** Assembler
   
* Evaluation
** Evaluation
   {{{subtitle(Setup)}}}

** Evaluation
   {{{subtitle(Experiments)}}}
   
** Evaluation
   {{{subtitle(Results)}}}
   
* Future Work
** Future Work 
   {{{subtitle(CLang/LLVM)}}}
   # CLang Exploration provided in thesis (don't go into detail, very technical)
